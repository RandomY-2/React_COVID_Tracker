{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jiahe Yan\\\\Desktop\\\\Full-Stack-Web-Development\\\\React\\\\covid-tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    alanBtn({\n      key: alanKey,\n      onCommand: ({\n        command\n      }) => {\n        if (command === 'testCommand') {\n          alert(\"This code is triggered\");\n        }\n      }\n    });\n  }, []);\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }) : null;\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => new Date(date).toLocaleDateString()),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.recovered),\n        label: 'Recovered',\n        borderColor: 'green',\n        backgroundColor: 'rgba(0, 255, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/Jiahe Yan/Desktop/Full-Stack-Web-Development/React/covid-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","alanBtn","key","alanKey","onCommand","command","alert","barChart","labels","datasets","label","backgroundColor","value","legend","display","title","text","lineChart","map","date","Date","toLocaleDateString","borderColor","fill","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n    \r\n    useEffect(() => {\r\n        alanBtn({\r\n            key: alanKey, \r\n            onCommand: ({ command }) => {\r\n                if (command === 'testCommand') {\r\n                    alert(\"This code is triggered\");\r\n                }\r\n            }\r\n        })\r\n        \r\n    }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },  {\r\n            data: dailyData.map((data) => data.recovered),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}