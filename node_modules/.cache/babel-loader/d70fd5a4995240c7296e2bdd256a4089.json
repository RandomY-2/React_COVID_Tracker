{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jiahe Yan\\\\Desktop\\\\Full-Stack-Web-Development\\\\React\\\\covid-tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    console.log(dailyData);\n    fetchAPI();\n  });\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => new Date(date).toLocaleDateString()),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.recovered),\n        label: 'Recovered',\n        borderColor: 'green',\n        backgroundColor: 'rgba(0, 255, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/Jiahe Yan/Desktop/Full-Stack-Web-Development/React/covid-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","dailyData","setDailyData","fetchAPI","console","log","lineChart","labels","map","date","Date","toLocaleDateString","datasets","data","confirmed","label","borderColor","fill","deaths","backgroundColor","recovered","container","country","barChart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,EAAC,MAAMN,cAAc,EAArB,EAAZ;AACH,KAFD;;AAIAQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEAE,IAAAA,QAAQ;AACX,GARQ,CAAT;AAUA,QAAMG,SAAS,GACXL,SAAS,CAAC,CAAD,CAAT,gBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACAM,MAAAA,MAAM,EAAEN,SAAS,CAACO,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc,IAAIC,IAAJ,CAASD,IAAT,EAAeE,kBAAf,EAA5B,CADR;AAEAC,MAAAA,QAAQ,EAAE,CAAC;AACCC,QAAAA,IAAI,EAAEZ,SAAS,CAACO,GAAV,CAAeK,IAAD,IAAUA,IAAI,CAACC,SAA7B,CADP;AAECC,QAAAA,KAAK,EAAE,UAFR;AAGCC,QAAAA,WAAW,EAAE,SAHd;AAICC,QAAAA,IAAI,EAAE;AAJP,OAAD,EAKG;AACDJ,QAAAA,IAAI,EAAEZ,SAAS,CAACO,GAAV,CAAeK,IAAD,IAAUA,IAAI,CAACK,MAA7B,CADL;AAEDH,QAAAA,KAAK,EAAE,QAFN;AAGDC,QAAAA,WAAW,EAAE,KAHZ;AAIDG,QAAAA,eAAe,EAAE,sBAJhB;AAKDF,QAAAA,IAAI,EAAE;AALL,OALH,EAWI;AACFJ,QAAAA,IAAI,EAAEZ,SAAS,CAACO,GAAV,CAAeK,IAAD,IAAUA,IAAI,CAACO,SAA7B,CADJ;AAEFL,QAAAA,KAAK,EAAE,WAFL;AAGFC,QAAAA,WAAW,EAAE,OAHX;AAIFG,QAAAA,eAAe,EAAE,sBAJf;AAKFF,QAAAA,IAAI,EAAE;AALJ,OAXJ;AAFV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAuBU,IAxBd;AA2BA,sBACI;AAAK,IAAA,SAAS,EAAElB,MAAM,CAACsB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,OAAO,GAAGC,QAAH,GAAcjB,SAD1B,CADJ;AAKH,CA9CD;;AAgDA,eAAeN,KAAf","sourcesContent":["import React, { useState, useEffect }from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = () => {\r\n    \r\n    const [dailyData, setDailyData] = useState({});\r\n    \r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        \r\n        console.log(dailyData);\r\n        \r\n        fetchAPI();\r\n    });\r\n    \r\n    const lineChart = (\r\n        dailyData[0] ? (\r\n            <Line data={{\r\n                        labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n                        datasets: [{\r\n                                    data: dailyData.map((data) => data.confirmed),\r\n                                    label: 'Infected',\r\n                                    borderColor: '#3333ff',\r\n                                    fill: true,\r\n                                  }, {\r\n                                    data: dailyData.map((data) => data.deaths),\r\n                                    label: 'Deaths',\r\n                                    borderColor: 'red',\r\n                                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                                    fill: true,\r\n                                  },  {\r\n                                    data: dailyData.map((data) => data.recovered),\r\n                                    label: 'Recovered',\r\n                                    borderColor: 'green',\r\n                                    backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n                                    fill: true,\r\n                                  },\r\n                                  ],\r\n                        }} \r\n            />) : null\r\n    );\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}